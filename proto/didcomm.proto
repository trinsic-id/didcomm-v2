syntax = "proto3";

package didcomm.messaging;

option csharp_namespace = "DIDComm.Messaging";
option go_package = "didcomm.org/messaging";
option java_package = "DIDComm.Messaging.Proto";
option java_outer_classname="DIDComm";

import "security.proto";

message CoreMessage {
    string id = 1;
    string type = 2;
    bytes body = 3;
    repeated string to = 4;
    string from = 5;
    int64 created = 6 [json_name="created_time"];
    int64 expires = 7 [json_name="expires_time"];
}


service DIDCommPlain {
    rpc Unary(CoreMessage)                              returns (CoreMessage);
    rpc ServerStreaming(CoreMessage)                    returns (stream CoreMessage);
    rpc ClientStreaming(stream CoreMessage)             returns (CoreMessage);
    rpc BidirectionalStreaming(stream CoreMessage)      returns (stream CoreMessage);
}

service DIDCommEncrypted {
    rpc Unary(EncryptedMessage)                         returns (EncryptedMessage);
    rpc ServerStreaming(EncryptedMessage)               returns (stream EncryptedMessage);
    rpc ClientStreaming(stream EncryptedMessage)        returns (EncryptedMessage);
    rpc BidirectionalStreaming(stream EncryptedMessage) returns (stream EncryptedMessage);
}

service DIDCommSimplex {
    rpc Simplex(EncryptedMessage)                       returns (NoOp);
}

message NoOp {}
